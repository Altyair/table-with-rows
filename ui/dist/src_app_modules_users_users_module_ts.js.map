{"version":3,"file":"src_app_modules_users_users_module_ts.js","mappings":"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","sources":["./src/app/api/users/clients.ts","./src/app/api/users/dto.ts","./src/app/modules/users/components/registry-users-table/registry-users-table.component.ts","./src/app/modules/users/components/users/users.component.ts","./src/app/modules/users/users-routing.module.ts","./src/app/modules/users/users.module.ts","./src/app/shared/services/filter-state.service.ts","./node_modules/rxjs/dist/esm/internal/observable/interval.js","./src/app/modules/users/components/registry-users-table/registry-users-table.component.scss","./src/app/modules/users/components/users/users.component.scss","./node_modules/@angular/cdk/fesm2022/drag-drop.mjs","./node_modules/@angular/material/fesm2022/sort.mjs"],"sourcesContent":["import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\r\nimport { Observable, throwError as _observableThrow, of as _observableOf, of } from 'rxjs';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\r\n\r\nimport { ErrorDto, UserRegistrySearchModel, RegistryDtoOfUserRegistryItem } from './dto';\r\n\r\nexport const SERVER_BASE_URL = 'https://table-with-rows-production-6561.up.railway.app';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class UsersClient {\r\n    private http: HttpClient;\r\n    private readonly baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient) {\r\n        this.http = http;\r\n        this.baseUrl = SERVER_BASE_URL;\r\n    }\r\n\r\n    /**\r\n     * Получить список пользователей.\r\n     * @param searchModel (optional) Поисковая модель.\r\n     * @return Возвращает список пользователей.\r\n     */\r\n    search(searchModel?: UserRegistrySearchModel | undefined): Observable<RegistryDtoOfUserRegistryItem> {\r\n        let url_ = this.baseUrl + '/api/users/search';\r\n        url_ = url_.replace(/[?&]$/, '');\r\n\r\n        const content_ = JSON.stringify(searchModel);\r\n\r\n        const options_: any = {\r\n            body: content_,\r\n            observe: 'response',\r\n            responseType: 'blob',\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            }),\r\n        };\r\n\r\n        return this.http\r\n            .request('post', url_, options_)\r\n            .pipe(\r\n                _observableMergeMap((response_: any) => {\r\n                    return this.processSearch(response_);\r\n                })\r\n            )\r\n            .pipe(\r\n                _observableCatch((response_: any) => {\r\n                    if (response_ instanceof HttpResponseBase) {\r\n                        try {\r\n                            return this.processSearch(response_ as any);\r\n                        } catch (e) {\r\n                            return _observableThrow(e) as any as Observable<RegistryDtoOfUserRegistryItem>;\r\n                        }\r\n                    } else {\r\n                        return _observableThrow(response_) as any as Observable<RegistryDtoOfUserRegistryItem>;\r\n                    }\r\n                })\r\n            );\r\n    }\r\n\r\n    protected processSearch(response: HttpResponseBase): Observable<RegistryDtoOfUserRegistryItem> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse\r\n                ? response.body\r\n                : (response as any).error instanceof Blob\r\n                ? (response as any).error\r\n                : undefined;\r\n\r\n        const _headers: any = {};\r\n        if (response.headers) {\r\n            for (const key of response.headers.keys()) {\r\n                _headers[key] = response.headers.get(key);\r\n            }\r\n        }\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(\r\n                _observableMergeMap((_responseText: string) => {\r\n                    let result200: any = null;\r\n                    const resultData200 =\r\n                        _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n                    result200 = RegistryDtoOfUserRegistryItem.fromJS(resultData200);\r\n                    return _observableOf(result200);\r\n                })\r\n            );\r\n        } else if (status === 401) {\r\n            return blobToText(responseBlob).pipe(\r\n                _observableMergeMap((_responseText: string) => {\r\n                    let result401: any = null;\r\n                    const resultData401 =\r\n                        _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n                    result401 = ErrorDto.fromJS(resultData401);\r\n                    return throwException(\r\n                        '\\u041d\\u0435 \\u0443\\u0434\\u0430\\u043b\\u043e\\u0441\\u044c \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u044c \\u0430\\u0432\\u0442\\u043e\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044e.',\r\n                        status,\r\n                        _responseText,\r\n                        _headers,\r\n                        result401\r\n                    );\r\n                })\r\n            );\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(\r\n                _observableMergeMap((_responseText: string) => {\r\n                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n                })\r\n            );\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n\r\n    /**\r\n     * Пометить элемент как выбранный в списке.\r\n     * @param selected.\r\n     * @param id.\r\n     * @return Возвращает булево значение.\r\n     */\r\n    select(selected: boolean, id: number): Observable<boolean> {\r\n        let url_ = this.baseUrl + '/api/users/select';\r\n        url_ = url_.replace(/[?&]$/, '');\r\n\r\n        const content_ = JSON.stringify({ selected, id });\r\n\r\n        const options_: any = {\r\n            body: content_,\r\n            observe: 'response',\r\n            responseType: 'blob',\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            }),\r\n        };\r\n\r\n        return this.http\r\n            .request('post', url_, options_)\r\n            .pipe(\r\n                _observableMergeMap((response_: any) => {\r\n                    return this.processSelect(response_);\r\n                })\r\n            )\r\n            .pipe(\r\n                _observableCatch((response_: any) => {\r\n                    if (response_ instanceof HttpResponseBase) {\r\n                        try {\r\n                            return this.processSelect(response_ as any);\r\n                        } catch (e) {\r\n                            return _observableThrow(e) as any as Observable<boolean>;\r\n                        }\r\n                    } else {\r\n                        return _observableThrow(response_) as any as Observable<boolean>;\r\n                    }\r\n                })\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Пометить все записи как выбранные в списке.\r\n     * @param selected.\r\n     * @return Возвращает булево значение.\r\n     */\r\n    allSelect(selected: boolean): Observable<boolean> {\r\n        let url_ = this.baseUrl + '/api/users/all-select';\r\n        url_ = url_.replace(/[?&]$/, '');\r\n\r\n        const content_ = JSON.stringify({ selected });\r\n\r\n        const options_: any = {\r\n            body: content_,\r\n            observe: 'response',\r\n            responseType: 'blob',\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            }),\r\n        };\r\n\r\n        return this.http\r\n            .request('post', url_, options_)\r\n            .pipe(\r\n                _observableMergeMap((response_: any) => {\r\n                    return this.processSelect(response_);\r\n                })\r\n            )\r\n            .pipe(\r\n                _observableCatch((response_: any) => {\r\n                    if (response_ instanceof HttpResponseBase) {\r\n                        try {\r\n                            return this.processSelect(response_ as any);\r\n                        } catch (e) {\r\n                            return _observableThrow(e) as any as Observable<boolean>;\r\n                        }\r\n                    } else {\r\n                        return _observableThrow(response_) as any as Observable<boolean>;\r\n                    }\r\n                })\r\n            );\r\n    }\r\n\r\n    protected processSelect(response: HttpResponseBase): Observable<boolean> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse\r\n                ? response.body\r\n                : (response as any).error instanceof Blob\r\n                ? (response as any).error\r\n                : undefined;\r\n\r\n        const _headers: any = {};\r\n        if (response.headers) {\r\n            for (const key of response.headers.keys()) {\r\n                _headers[key] = response.headers.get(key);\r\n            }\r\n        }\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(\r\n                _observableMergeMap((_responseText: string) => {\r\n                    let result200: any = null;\r\n                    const resultData200 =\r\n                        _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n                    result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n\r\n                    return _observableOf(result200);\r\n                })\r\n            );\r\n        } else if (status === 401) {\r\n            return blobToText(responseBlob).pipe(\r\n                _observableMergeMap((_responseText: string) => {\r\n                    let result401: any = null;\r\n                    const resultData401 =\r\n                        _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n                    result401 = ErrorDto.fromJS(resultData401);\r\n                    return throwException(\r\n                        '\\u041d\\u0435 \\u0443\\u0434\\u0430\\u043b\\u043e\\u0441\\u044c \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u044c \\u0430\\u0432\\u0442\\u043e\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044e.',\r\n                        status,\r\n                        _responseText,\r\n                        _headers,\r\n                        result401\r\n                    );\r\n                })\r\n            );\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(\r\n                _observableMergeMap((_responseText: string) => {\r\n                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n                })\r\n            );\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n}\r\n\r\nexport class ApiException extends Error {\r\n    override message: string;\r\n    status: number;\r\n    response: string;\r\n    headers: { [key: string]: any };\r\n    result: any;\r\n\r\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any }, result: any) {\r\n        super();\r\n\r\n        this.message = message;\r\n        this.status = status;\r\n        this.response = response;\r\n        this.headers = headers;\r\n        this.result = result;\r\n    }\r\n\r\n    protected isApiException = true;\r\n\r\n    static isApiException(obj: any): obj is ApiException {\r\n        return obj.isApiException === true;\r\n    }\r\n}\r\n\r\nfunction throwException(\r\n    message: string,\r\n    status: number,\r\n    response: string,\r\n    headers: { [key: string]: any },\r\n    result?: any\r\n): Observable<any> {\r\n    return _observableThrow(new ApiException(message, status, response, headers, result));\r\n}\r\n\r\nfunction blobToText(blob: any): Observable<string> {\r\n    return new Observable<string>((observer: any) => {\r\n        if (!blob) {\r\n            observer.next('');\r\n            observer.complete();\r\n        } else {\r\n            const reader = new FileReader();\r\n            reader.onload = (event) => {\r\n                observer.next((event.target as any).result);\r\n                observer.complete();\r\n            };\r\n            reader.readAsText(blob);\r\n        }\r\n    });\r\n}\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n// ReSharper disable InconsistentNaming\r\n\r\nexport class ErrorDto {\r\n    id!: string;\r\n    code!: string | null;\r\n    message!: string;\r\n    title!: string | null;\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"] !== undefined ? _data[\"id\"] : <any>null;\r\n            this.code = _data[\"code\"] !== undefined ? _data[\"code\"] : <any>null;\r\n            this.message = _data[\"message\"] !== undefined ? _data[\"message\"] : <any>null;\r\n            this.title = _data[\"title\"] !== undefined ? _data[\"title\"] : <any>null;\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): ErrorDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new ErrorDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id !== undefined ? this.id : <any>null;\r\n        data[\"code\"] = this.code !== undefined ? this.code : <any>null;\r\n        data[\"message\"] = this.message !== undefined ? this.message : <any>null;\r\n        data[\"title\"] = this.title !== undefined ? this.title : <any>null;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport class SearchParametersDto {\r\n    page!: number;\r\n    itemsPerPage!: number | null;\r\n    orderBy!: string | null;\r\n    orderAsc!: boolean | null;\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.page = _data[\"page\"] !== undefined ? _data[\"page\"] : <any>null;\r\n            this.itemsPerPage = _data[\"itemsPerPage\"] !== undefined ? _data[\"itemsPerPage\"] : <any>null;\r\n            this.orderBy = _data[\"orderBy\"] !== undefined ? _data[\"orderBy\"] : <any>null;\r\n            this.orderAsc = _data[\"orderAsc\"] !== undefined ? _data[\"orderAsc\"] : <any>null;\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): SearchParametersDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new SearchParametersDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"page\"] = this.page !== undefined ? this.page : <any>null;\r\n        data[\"itemsPerPage\"] = this.itemsPerPage !== undefined ? this.itemsPerPage : <any>null;\r\n        data[\"orderBy\"] = this.orderBy !== undefined ? this.orderBy : <any>null;\r\n        data[\"orderAsc\"] = this.orderAsc !== undefined ? this.orderAsc : <any>null;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport class UserRegistrySearchModel {\r\n    name!: string | null;\r\n    searchParameters!: SearchParametersDto | null;\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.name = _data[\"name\"] !== undefined ? _data[\"name\"] : <any>null;\r\n            this.searchParameters = _data[\"searchParameters\"] ? SearchParametersDto.fromJS(_data[\"searchParameters\"]) : <any>null;\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UserRegistrySearchModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UserRegistrySearchModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"name\"] = this.name !== undefined ? this.name : <any>null;\r\n        data[\"searchParameters\"] = this.searchParameters ? this.searchParameters.toJSON() : <any>null;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport class RegistryDtoOfUserRegistryItem {\r\n    /** Набор элементов реестра */\r\n    items!: UserRegistryItem[];\r\n    /** Размер реестра */\r\n    itemsCount!: number;\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            if (Array.isArray(_data[\"items\"])) {\r\n                this.items = [] as any;\r\n                for (let item of _data[\"items\"])\r\n                    this.items!.push(UserRegistryItem.fromJS(item));\r\n            }\r\n            else {\r\n                this.items = <any>null;\r\n            }\r\n            this.itemsCount = _data[\"itemsCount\"] !== undefined ? _data[\"itemsCount\"] : <any>null;\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): RegistryDtoOfUserRegistryItem {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new RegistryDtoOfUserRegistryItem();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        if (Array.isArray(this.items)) {\r\n            data[\"items\"] = [];\r\n            for (let item of this.items)\r\n                data[\"items\"].push(item.toJSON());\r\n        }\r\n        data[\"itemsCount\"] = this.itemsCount !== undefined ? this.itemsCount : <any>null;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport class UserRegistryItem {\r\n    id!: string | null;\r\n    name!: string | null;\r\n    selected!: boolean | null;\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"] !== undefined ? _data[\"id\"] : <any>null;\r\n            this.name = _data[\"name\"] !== undefined ? _data[\"name\"] : <any>null;\r\n            this.selected = _data[\"selected\"] !== undefined ? _data[\"selected\"] : <any>null;\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UserRegistryItem {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UserRegistryItem();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id !== undefined ? this.id : <any>null;\r\n        data[\"name\"] = this.name !== undefined ? this.name : <any>null;\r\n        data[\"selected\"] = this.selected !== undefined ? this.selected : <any>null;\r\n        return data;\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { UserRegistryItem } from '../../../../api/users/dto';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { UsersClient } from '../../../../api/users/clients';\r\n\r\nenum Columns {\r\n    Actions = 'actions',\r\n    Name = 'name',\r\n}\r\n\r\n@Component({\r\n    selector: 'sfs-registry-users-table',\r\n    templateUrl: './registry-users-table.component.html',\r\n    styleUrls: ['./registry-users-table.component.scss'],\r\n})\r\nexport class RegistryUsersTableComponent implements AfterViewInit, OnDestroy {\r\n    @ViewChild(MatSort) sort!: MatSort;\r\n    @ViewChild('table') table!: MatTable<RegistryUsersTableComponent>;\r\n\r\n    @Input() usersDataSource: UserRegistryItem[] = [];\r\n    @Input() isLoading: boolean = false;\r\n\r\n    @Output() onSortChange = new EventEmitter<any>();\r\n\r\n    @Output() onPageSizeIncrease: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    @Output() onSelectChange = new EventEmitter<any>();\r\n    @Output() onAllSelectChange = new EventEmitter<any>();\r\n\r\n    private destroy$: Subject<void> = new Subject();\r\n\r\n    columns = Columns;\r\n    displayedColumns: string[] = Object.values(Columns);\r\n    public allSelected = false;\r\n\r\n    constructor(private readonly usersClient: UsersClient, private readonly cdr: ChangeDetectorRef) {}\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.sort.sortChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n            this.onSortChange.emit(this.sort);\r\n        });\r\n    }\r\n\r\n    toggleSelectAllUsers(event?: any): void {\r\n        this.allSelected = event.checked;\r\n        this.onAllSelectChange.emit(event.checked);\r\n    }\r\n\r\n    isAllSelected(): boolean {\r\n        return !this.usersDataSource.some((user) => !user.selected);\r\n    }\r\n\r\n    public selectUser(event: any, id: string): void {\r\n        this.onSelectChange.emit({ selected: event.checked, id });\r\n    }\r\n\r\n    onScroll(event?: any): void {\r\n        if (event.target.offsetHeight + event.target.scrollTop >= event.target.scrollHeight) {\r\n            this.onPageSizeIncrease.emit();\r\n        }\r\n    }\r\n\r\n    drop(event: CdkDragDrop<UserRegistryItem[]>) {\r\n        moveItemInArray(this.usersDataSource, event.previousIndex, event.currentIndex);\r\n        this.table.renderRows();\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { SearchParametersDto, UserRegistryItem, UserRegistrySearchModel } from '../../../../api/users/dto';\r\nimport { UsersClient } from 'src/app/api/users/clients';\r\nimport { FILTERS_MODEL, FilterStateService } from '@shared/services/filter-state.service';\r\nimport { Subject } from 'rxjs';\r\n\r\ninterface IUsersFilterForm {\r\n    name: FormControl<string | null>;\r\n}\r\n\r\n@Component({\r\n    selector: 'sfs-users',\r\n    templateUrl: './users.component.html',\r\n    styleUrls: ['./users.component.scss'],\r\n    providers: [],\r\n})\r\nexport class UsersComponent implements OnInit, OnDestroy {\r\n    data: UserRegistryItem[] = [];\r\n    filterForm: FormGroup<IUsersFilterForm>;\r\n    initItemsPerPage: number = 20;\r\n    private searchModel: UserRegistrySearchModel = new UserRegistrySearchModel();\r\n    private searchParameters = new SearchParametersDto();\r\n    private destroy$: Subject<void> = new Subject();\r\n    isTableLoading: boolean;\r\n    private maxChunks: number = 0;\r\n\r\n    constructor(\r\n        private readonly usersClient: UsersClient,\r\n        private readonly cdr: ChangeDetectorRef,\r\n        private readonly filterStateService: FilterStateService\r\n    ) {\r\n        this.filterForm = this.createFilterForm();\r\n        this.isTableLoading = true;\r\n        this.setSearchModelDefault();\r\n    }\r\n\r\n    private createFilterForm(): FormGroup<IUsersFilterForm> {\r\n        return new FormGroup<IUsersFilterForm>({\r\n            name: new FormControl<string | null>(null),\r\n        });\r\n    }\r\n\r\n    setSearchModelDefault(): void {\r\n        this.searchParameters.page = 1;\r\n        this.searchParameters.itemsPerPage = this.initItemsPerPage;\r\n        this.searchParameters.orderBy = 'name';\r\n        this.searchParameters.orderAsc = true;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.isTableLoading = false;\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const filter = this.filterStateService.loadFilter<UserRegistrySearchModel>(FILTERS_MODEL.users);\r\n        if (filter) {\r\n            this.searchParameters = SearchParametersDto.fromJS(filter.searchParameters);\r\n            this.searchParameters.page = 1;\r\n            const values = UserRegistrySearchModel.fromJS(filter);\r\n            this.filterForm.patchValue(values);\r\n        }\r\n        this.search();\r\n    }\r\n\r\n    onPageSizeIncrease(): void {\r\n        this.searchParameters.page! += 1;\r\n        if (this.searchParameters.page! <= this.maxChunks) {\r\n            this.searchItems();\r\n        }\r\n    }\r\n\r\n    search(): void {\r\n        this.data = [];\r\n        this.searchParameters.page = 1;\r\n        this.searchParameters.itemsPerPage = this.initItemsPerPage;\r\n        const formValue = this.filterForm.getRawValue();\r\n\r\n        this.searchModel = UserRegistrySearchModel.fromJS(formValue);\r\n\r\n        if (this.filterForm.valid) {\r\n            this.searchItems();\r\n        }\r\n    }\r\n\r\n    reset(): void {\r\n        this.filterForm.reset(this.createFilterForm().value);\r\n        this.search();\r\n    }\r\n\r\n    onClearName(): void {\r\n        this.search();\r\n    }\r\n\r\n    public onSortChange(sort: any): void {\r\n        const isAscSort = sort.direction === 'asc';\r\n        if (sort.direction === '') {\r\n            this.searchParameters.orderAsc = null;\r\n            this.searchParameters.orderBy = null;\r\n            return;\r\n        }\r\n        this.searchParameters.orderAsc = isAscSort;\r\n        if (sort.active === 'name') {\r\n            this.searchParameters.orderBy = 'name';\r\n        } else {\r\n            this.searchParameters.orderBy = sort.active;\r\n        }\r\n        this.data = [];\r\n        this.searchParameters.page = 1;\r\n        this.searchItems();\r\n    }\r\n\r\n    private searchItems(): void {\r\n        this.isTableLoading = true;\r\n        this.searchModel.searchParameters = this.searchParameters;\r\n        this.filterStateService.saveFilter<UserRegistrySearchModel>(this.searchModel, FILTERS_MODEL.users);\r\n\r\n        this.usersClient.search(this.searchModel).subscribe({\r\n            next: (data) => {\r\n                this.maxChunks = Math.ceil(data.itemsCount / this.initItemsPerPage);\r\n                this.data = [...this.data, ...data.items];\r\n\r\n                this.isTableLoading = false;\r\n            },\r\n            error: () => {\r\n                this.isTableLoading = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    public onSelectChange(event: { selected: boolean; id: string }): void {\r\n        this.usersClient.select(event.selected, Number(event.id)).subscribe({\r\n            next: (data) => {\r\n                this.isTableLoading = false;\r\n            },\r\n            error: () => {\r\n                this.isTableLoading = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    public onAllSelectChange(selected: any): void {\r\n        this.usersClient.allSelect(selected).subscribe({\r\n            next: (data) => {\r\n                this.isTableLoading = false;\r\n                this.data.forEach((user) => {\r\n                    user.selected = selected;\r\n                });\r\n            },\r\n            error: () => {\r\n                this.isTableLoading = false;\r\n            },\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UsersComponent } from './components/users/users.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        component: UsersComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class UsersRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { RegistryUsersTableComponent } from './components/registry-users-table/registry-users-table.component';\r\nimport { SharedModule } from '@shared';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { MatSort, MatSortHeader } from '@angular/material/sort';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\n\r\n@NgModule({\r\n    declarations: [UsersComponent, RegistryUsersTableComponent],\r\n    imports: [UsersRoutingModule, SharedModule, ObserversModule, MatSort, MatSortHeader, DragDropModule],\r\n    providers: [],\r\n})\r\nexport class UsersModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport const FILTERS_MODEL = {\r\n    users: 'users',\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FilterStateService {\r\n    saveFilters(filters: { [key: string]: any }): void {\r\n        localStorage.setItem('filters', JSON.stringify(filters));\r\n    }\r\n\r\n    saveFilter<T>(filter: T, type: string): void {\r\n        const filters = this.loadFilters();\r\n        filters[type] = filter;\r\n        this.saveFilters(filters);\r\n    }\r\n\r\n    loadFilter<T>(type: string): T {\r\n        const filters = this.loadFilters();\r\n        return filters[type] || null;\r\n    }\r\n\r\n    loadFilters(): { [key: string]: any } {\r\n        const filters = localStorage.getItem('filters');\r\n        return filters ? JSON.parse(filters) : {};\r\n    }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { timer } from './timer';\nexport function interval(period = 0, scheduler = asyncScheduler) {\n    if (period < 0) {\n        period = 0;\n    }\n    return timer(period, period, scheduler);\n}\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `@charset \"UTF-8\";\n/** 1600 и выше */\n/** 1280 – 1599 */\n/** 1024 – 1279 */\n/** 768 – 1023 */\n/** 360 – 767 */\n.not-found {\n  font-size: 16px;\n  font-weight: 500;\n  padding: 16px 0;\n}\n\n.table-spinner {\n  position: absolute;\n  height: 60px;\n  width: 60px;\n  left: 48%;\n  top: 80px;\n  z-index: 999;\n}\n.table-spinner__wrapper {\n  position: sticky;\n  top: calc(50% - 80px);\n  left: 0;\n  z-index: 999;\n}\n\n.blur {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.scroll-container {\n  height: 500px;\n  overflow-y: auto;\n}\n\n.thead {\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\ntable.mat-mdc-table .mdc-data-table__row {\n  cursor: pointer;\n}\ntable.mat-mdc-table .mdc-data-table__row:hover {\n  background: #f0f0f0;\n}\n\n.spinner {\n  display: flex;\n  justify-content: center;\n  margin-top: 32px;\n}\n\n.cdk-drag-preview {\n  box-sizing: border-box;\n  border-radius: 4px;\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.cdk-drag-placeholder {\n  opacity: 0;\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.cdk-drop-list-dragging .mat-row:not(.cdk-drag-placeholder) {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./../../../my%20projects/table-with-rows/ui/src/app/modules/users/components/registry-users-table/registry-users-table.component.scss\",\"webpack://./src/scss/variables.scss\",\"webpack://./src/app/modules/users/components/registry-users-table/registry-users-table.component.scss\"],\"names\":[],\"mappings\":\"AAAA,gBAAgB;ACoBhB,iBAAA;AAEA,iBAAA;AAEA,iBAAA;AAEA,gBAAA;AAEA,eAAA;AC1BA;EACE,eAAA;EACA,gBAAA;EACA,eAAA;AFKF;;AEFA;EACE,kBAAA;EACA,YAAA;EACA,WAAA;EACA,SAAA;EACA,SAAA;EACA,YAAA;AFKF;AEHE;EACE,gBAAA;EACA,qBAAA;EACA,OAAA;EACA,YAAA;AFKJ;;AEDA;EACE,YAAA;EACA,oBAAA;AFIF;;AEDA;EACE,aAAA;EACA,gBAAA;AFIF;;AEDA;EACE,gBAAA;EACA,MAAA;EACA,aAAA;AFIF;;AEDA;EACE,eAAA;AFIF;AEFE;EACE,mBAAA;AFIJ;;AEAA;EACE,aAAA;EACA,uBAAA;EACA,gBAAA;AFGF;;AECA;EACE,sBAAA;EACA,kBAAA;EACA,qHAAA;AFEF;;AEGA;EACE,UAAA;AFAF;;AEGA;EACE,sDAAA;AFAF;;AEGA;EACE,sDAAA;AFAF\",\"sourcesContent\":[\"@charset \\\"UTF-8\\\";\\n/** 1600 и выше */\\n/** 1280 – 1599 */\\n/** 1024 – 1279 */\\n/** 768 – 1023 */\\n/** 360 – 767 */\\n.not-found {\\n  font-size: 16px;\\n  font-weight: 500;\\n  padding: 16px 0;\\n}\\n\\n.table-spinner {\\n  position: absolute;\\n  height: 60px;\\n  width: 60px;\\n  left: 48%;\\n  top: 80px;\\n  z-index: 999;\\n}\\n.table-spinner__wrapper {\\n  position: sticky;\\n  top: calc(50% - 80px);\\n  left: 0;\\n  z-index: 999;\\n}\\n\\n.blur {\\n  opacity: 0.5;\\n  pointer-events: none;\\n}\\n\\n.scroll-container {\\n  height: 500px;\\n  overflow-y: auto;\\n}\\n\\n.thead {\\n  position: sticky;\\n  top: 0;\\n  z-index: 1000;\\n}\\n\\ntable.mat-mdc-table .mdc-data-table__row {\\n  cursor: pointer;\\n}\\ntable.mat-mdc-table .mdc-data-table__row:hover {\\n  background: #f0f0f0;\\n}\\n\\n.spinner {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 32px;\\n}\\n\\n.cdk-drag-preview {\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\n}\\n\\n.cdk-drag-placeholder {\\n  opacity: 0;\\n}\\n\\n.cdk-drag-animating {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.cdk-drop-list-dragging .mat-row:not(.cdk-drag-placeholder) {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\",\"$dark-color: #494949;\\r\\n$light-color: #808080;\\r\\n$primary-color: #008e1f;\\r\\n$warn-color: #f44336;\\r\\n$block-color: #d9001b;\\r\\n$accent-color: #fcd703;\\r\\n$border-color: #d8d8d8;\\r\\n\\r\\n//grid\\r\\n$grid-breakpoint-xl: 1600px;\\r\\n$grid-breakpoint-lgx: 1350px;\\r\\n$grid-breakpoint-lg: 1280px;\\r\\n$grid-breakpoint-md: 1024px;\\r\\n$grid-breakpoint-sm: 768px;\\r\\n$grid-breakpoint-xs: 360px;\\r\\n$grid-breakpoint-lg-max: 1599px;\\r\\n$grid-breakpoint-md-max: 1279px;\\r\\n$grid-breakpoint-sm-max: 1023px;\\r\\n$grid-breakpoint-xs-max: 767px;\\r\\n\\r\\n/** 1600 и выше */\\r\\n$grid-gutter-xl: 12px;\\r\\n/** 1280 – 1599 */\\r\\n$grid-gutter-lg: 12px;\\r\\n/** 1024 – 1279 */\\r\\n$grid-gutter-md: 12px;\\r\\n/** 768 – 1023 */\\r\\n$grid-gutter-sm: 12px;\\r\\n/** 360 – 767 */\\r\\n$grid-gutter-xs: 12px;\\r\\n\\r\\n$container-padding-xl: 12px;\\r\\n$container-width-xl: 1480px + $container-padding-xl * 2;\\r\\n$container-padding-lg: 24px;\\r\\n$container-padding-md: 24px;\\r\\n$container-padding-sm: 20px;\\r\\n$container-padding-xs: 16px;\\r\\n\",\"@import 'src/scss/variables';\\r\\n\\r\\n.not-found {\\r\\n  font-size: 16px;\\r\\n  font-weight: 500;\\r\\n  padding: 16px 0;\\r\\n}\\r\\n\\r\\n.table-spinner {\\r\\n  position: absolute;\\r\\n  height: 60px;\\r\\n  width: 60px;\\r\\n  left: 48%;\\r\\n  top: 80px;\\r\\n  z-index: 999;\\r\\n\\r\\n  &__wrapper {\\r\\n    position: sticky;\\r\\n    top:  calc(50% - 80px);\\r\\n    left: 0;\\r\\n    z-index: 999;\\r\\n  }\\r\\n}\\r\\n\\r\\n.blur {\\r\\n  opacity: 0.5;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.scroll-container {\\r\\n  height: 500px;\\r\\n  overflow-y: auto;\\r\\n}\\r\\n\\r\\n.thead {\\r\\n  position: sticky;\\r\\n  top: 0;\\r\\n  z-index: 1000;\\r\\n}\\r\\n\\r\\ntable.mat-mdc-table .mdc-data-table__row {\\r\\n  cursor: pointer;\\r\\n\\r\\n  &:hover {\\r\\n    background: #f0f0f0;\\r\\n  }\\r\\n}\\r\\n\\r\\n.spinner {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  margin-top: 32px;\\r\\n}\\r\\n\\r\\n//---------------------------- drag & drop --------------\\r\\n.cdk-drag-preview {\\r\\n  box-sizing: border-box;\\r\\n  border-radius: 4px;\\r\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\\r\\n  0 8px 10px 1px rgba(0, 0, 0, 0.14),\\r\\n  0 3px 14px 2px rgba(0, 0, 0, 0.12);\\r\\n}\\r\\n\\r\\n.cdk-drag-placeholder {\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.cdk-drag-animating {\\r\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n\\r\\n.cdk-drop-list-dragging .mat-row:not(.cdk-drag-placeholder) {\\r\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `@charset \"UTF-8\";\n/** 1600 и выше */\n/** 1280 – 1599 */\n/** 1024 – 1279 */\n/** 768 – 1023 */\n/** 360 – 767 */\n.btn-block {\n  margin-left: auto;\n  margin-right: 0;\n}\n\n:host .mat-mdc-card {\n  margin-bottom: 0;\n}\n\n.header-button-last {\n  margin-inline-start: auto;\n  margin-inline-end: 0;\n}\n\n.btn-block .search {\n  pointer-events: auto;\n}\n\n.btn-table-block {\n  display: flex;\n}\n.btn-table-block .table-btn {\n  position: relative;\n  margin-inline-start: auto;\n  margin-inline-end: 0;\n  z-index: 2;\n}\n.btn-table-block .top {\n  top: 56px;\n}\n.btn-table-block .bottom {\n  bottom: 48px;\n}\n\n.options {\n  gap: 40px;\n}\n\n.not-found {\n  font-size: 16px;\n  font-weight: 500;\n  padding: 16px 0;\n  margin-top: 24px;\n}\n\n.col-auto {\n  width: 13.8%;\n}\n\n.gap {\n  gap: 32px;\n}\n\n@media (min-width: 1601px) {\n  .col-4-5 {\n    flex: 0 0 auto;\n    width: 39.16666666%;\n  }\n  .col-xxl-3-5 {\n    flex: 0 0 auto;\n    width: 27.3666666%;\n  }\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./../../../my%20projects/table-with-rows/ui/src/app/modules/users/components/users/users.component.scss\",\"webpack://./src/scss/variables.scss\",\"webpack://./src/app/modules/users/components/users/users.component.scss\"],\"names\":[],\"mappings\":\"AAAA,gBAAgB;ACoBhB,iBAAA;AAEA,iBAAA;AAEA,iBAAA;AAEA,gBAAA;AAEA,eAAA;AC1BA;EACI,iBAAA;EACA,eAAA;AFKJ;;AEFI;EACI,gBAAA;AFKR;;AEDA;EACI,yBAAA;EACA,oBAAA;AFIJ;;AEAI;EACI,oBAAA;AFGR;;AECA;EACI,aAAA;AFEJ;AEAI;EACI,kBAAA;EACA,yBAAA;EACA,oBAAA;EACA,UAAA;AFER;AECI;EACI,SAAA;AFCR;AEEI;EACI,YAAA;AFAR;;AEIA;EACI,SAAA;AFDJ;;AEIA;EACI,eAAA;EACA,gBAAA;EACA,eAAA;EACA,gBAAA;AFDJ;;AEIA;EACI,YAAA;AFDJ;;AEIA;EACI,SAAA;AFDJ;;AEIA;EACI;IACI,cAAA;IACA,mBAAA;EFDN;EEIE;IACI,cAAA;IACA,kBAAA;EFFN;AACF\",\"sourcesContent\":[\"@charset \\\"UTF-8\\\";\\n/** 1600 и выше */\\n/** 1280 – 1599 */\\n/** 1024 – 1279 */\\n/** 768 – 1023 */\\n/** 360 – 767 */\\n.btn-block {\\n  margin-left: auto;\\n  margin-right: 0;\\n}\\n\\n:host .mat-mdc-card {\\n  margin-bottom: 0;\\n}\\n\\n.header-button-last {\\n  margin-inline-start: auto;\\n  margin-inline-end: 0;\\n}\\n\\n.btn-block .search {\\n  pointer-events: auto;\\n}\\n\\n.btn-table-block {\\n  display: flex;\\n}\\n.btn-table-block .table-btn {\\n  position: relative;\\n  margin-inline-start: auto;\\n  margin-inline-end: 0;\\n  z-index: 2;\\n}\\n.btn-table-block .top {\\n  top: 56px;\\n}\\n.btn-table-block .bottom {\\n  bottom: 48px;\\n}\\n\\n.options {\\n  gap: 40px;\\n}\\n\\n.not-found {\\n  font-size: 16px;\\n  font-weight: 500;\\n  padding: 16px 0;\\n  margin-top: 24px;\\n}\\n\\n.col-auto {\\n  width: 13.8%;\\n}\\n\\n.gap {\\n  gap: 32px;\\n}\\n\\n@media (min-width: 1601px) {\\n  .col-4-5 {\\n    flex: 0 0 auto;\\n    width: 39.16666666%;\\n  }\\n  .col-xxl-3-5 {\\n    flex: 0 0 auto;\\n    width: 27.3666666%;\\n  }\\n}\",\"$dark-color: #494949;\\r\\n$light-color: #808080;\\r\\n$primary-color: #008e1f;\\r\\n$warn-color: #f44336;\\r\\n$block-color: #d9001b;\\r\\n$accent-color: #fcd703;\\r\\n$border-color: #d8d8d8;\\r\\n\\r\\n//grid\\r\\n$grid-breakpoint-xl: 1600px;\\r\\n$grid-breakpoint-lgx: 1350px;\\r\\n$grid-breakpoint-lg: 1280px;\\r\\n$grid-breakpoint-md: 1024px;\\r\\n$grid-breakpoint-sm: 768px;\\r\\n$grid-breakpoint-xs: 360px;\\r\\n$grid-breakpoint-lg-max: 1599px;\\r\\n$grid-breakpoint-md-max: 1279px;\\r\\n$grid-breakpoint-sm-max: 1023px;\\r\\n$grid-breakpoint-xs-max: 767px;\\r\\n\\r\\n/** 1600 и выше */\\r\\n$grid-gutter-xl: 12px;\\r\\n/** 1280 – 1599 */\\r\\n$grid-gutter-lg: 12px;\\r\\n/** 1024 – 1279 */\\r\\n$grid-gutter-md: 12px;\\r\\n/** 768 – 1023 */\\r\\n$grid-gutter-sm: 12px;\\r\\n/** 360 – 767 */\\r\\n$grid-gutter-xs: 12px;\\r\\n\\r\\n$container-padding-xl: 12px;\\r\\n$container-width-xl: 1480px + $container-padding-xl * 2;\\r\\n$container-padding-lg: 24px;\\r\\n$container-padding-md: 24px;\\r\\n$container-padding-sm: 20px;\\r\\n$container-padding-xs: 16px;\\r\\n\",\"@import 'src/scss/variables.scss';\\r\\n\\r\\n.btn-block {\\r\\n    margin-left: auto;\\r\\n    margin-right: 0;\\r\\n}\\r\\n:host {\\r\\n    .mat-mdc-card {\\r\\n        margin-bottom: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n.header-button-last {\\r\\n    margin-inline-start: auto;\\r\\n    margin-inline-end: 0;\\r\\n}\\r\\n\\r\\n.btn-block {\\r\\n    .search {\\r\\n        pointer-events: auto;\\r\\n    }\\r\\n}\\r\\n\\r\\n.btn-table-block {\\r\\n    display: flex;\\r\\n\\r\\n    .table-btn {\\r\\n        position: relative;\\r\\n        margin-inline-start: auto;\\r\\n        margin-inline-end: 0;\\r\\n        z-index: 2;\\r\\n    }\\r\\n\\r\\n    .top {\\r\\n        top: 56px;\\r\\n    }\\r\\n\\r\\n    .bottom {\\r\\n        bottom: 48px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.options {\\r\\n    gap: 40px;\\r\\n}\\r\\n\\r\\n.not-found {\\r\\n    font-size: 16px;\\r\\n    font-weight: 500;\\r\\n    padding: 16px 0;\\r\\n    margin-top: 24px;\\r\\n}\\r\\n\\r\\n.col-auto {\\r\\n    width: 13.8%;\\r\\n}\\r\\n\\r\\n.gap {\\r\\n    gap: 32px;\\r\\n}\\r\\n\\r\\n@media (min-width: $grid-breakpoint-xl + 1) {\\r\\n    .col-4-5 {\\r\\n        flex: 0 0 auto;\\r\\n        width: 39.16666666%;\\r\\n    }\\r\\n\\r\\n    .col-xxl-3-5 {\\r\\n        flex: 0 0 auto;\\r\\n        width: 27.3666666%;\\r\\n    }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, inject, ApplicationRef, EnvironmentInjector, createComponent, Injectable, Inject, InjectionToken, booleanAttribute, Directive, Optional, SkipSelf, Input, EventEmitter, Self, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge, BehaviorSubject } from 'rxjs';\nimport { takeUntil, map, take, tap, switchMap, startWith } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/bidi';\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n\n/** Gets a mutable version of an element's bounding `DOMRect`. */\nfunction getMutableClientRect(element) {\n    const rect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `DOMRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.width,\n        height: rect.height,\n        x: rect.x,\n        y: rect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `DOMRect`.\n * @param clientRect DOMRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `DOMRect`, as well as their bottom/right counterparts.\n * @param domRect `DOMRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustDomRect(domRect, top, left) {\n    domRect.top += top;\n    domRect.bottom = domRect.top + domRect.height;\n    domRect.left += left;\n    domRect.right = domRect.left + domRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a DOMRect.\n * @param rect DOMRect to check against.\n * @param threshold Threshold around the DOMRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearDomRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustDomRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch { }\n    }\n}\n\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/** Inline styles to be set as `!important` while dragging. */\nconst importantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\nclass PreviewRef {\n    constructor(_document, _rootElement, _direction, _initialDomRect, _previewTemplate, _previewClass, _pickupPositionOnPage, _initialTransform, _zIndex) {\n        this._document = _document;\n        this._rootElement = _rootElement;\n        this._direction = _direction;\n        this._initialDomRect = _initialDomRect;\n        this._previewTemplate = _previewTemplate;\n        this._previewClass = _previewClass;\n        this._pickupPositionOnPage = _pickupPositionOnPage;\n        this._initialTransform = _initialTransform;\n        this._zIndex = _zIndex;\n    }\n    attach(parent) {\n        this._preview = this._createPreview();\n        parent.appendChild(this._preview);\n        // The null check is necessary for browsers that don't support the popover API.\n        // Note that we use a string access for compatibility with Closure.\n        if ('showPopover' in this._preview) {\n            this._preview['showPopover']();\n        }\n    }\n    destroy() {\n        this._preview.remove();\n        this._previewEmbeddedView?.destroy();\n        this._preview = this._previewEmbeddedView = null;\n    }\n    setTransform(value) {\n        this._preview.style.transform = value;\n    }\n    getBoundingClientRect() {\n        return this._preview.getBoundingClientRect();\n    }\n    addClass(className) {\n        this._preview.classList.add(className);\n    }\n    getTransitionDuration() {\n        return getTransformTransitionDurationInMs(this._preview);\n    }\n    addEventListener(name, handler) {\n        this._preview.addEventListener(name, handler);\n    }\n    removeEventListener(name, handler) {\n        this._preview.removeEventListener(name, handler);\n    }\n    _createPreview() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this._previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._initialDomRect : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewEmbeddedView = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            preview = deepCloneNode(this._rootElement);\n            matchElementSize(preview, this._initialDomRect);\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': this._zIndex + '',\n        }, importantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('popover', 'manual');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, value));\n        }\n    }\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        if (event.cancelable) {\n                            event.preventDefault();\n                        }\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                // If there's a position constraint function, we want the element's top/left to be at the\n                // specific position on the page. Use the initial position as a reference if that's the case.\n                const offset = this.constrainPosition ? this._initialDomRect : this._pickupPositionOnPage;\n                const activeTransform = this._activeTransform;\n                activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n                activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            this._rootElement?.remove();\n        }\n        this._anchor?.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeListeners();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeListeners() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n        this._getShadowRoot()?.removeEventListener('selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        this._preview?.destroy();\n        this._preview = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        this._placeholder?.remove();\n        this._placeholderRef?.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeListeners();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this, event });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                    event,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        // Needs to happen before the root element is moved.\n        const shadowRoot = this._getShadowRoot();\n        const dropContainer = this._dropContainer;\n        if (shadowRoot) {\n            // In some browsers the global `selectstart` that we maintain in the `DragDropRegistry`\n            // doesn't cross the shadow boundary so we have to prevent it at the shadow root (see #28792).\n            this._ngZone.runOutsideAngular(() => {\n                shadowRoot.addEventListener('selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n            });\n        }\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = new PreviewRef(this._document, this._rootElement, this._direction, this._initialDomRect, this._previewTemplate || null, this.previewClass || null, this._pickupPositionOnPage, this._initialTransform, this._config.zIndex || 1000);\n            this._preview.attach(this._getPreviewInsertionPoint(parent, shadowRoot));\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this.started.next({ source: this, event }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this, event });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeListeners();\n        this._initialDomRect = this._rootElement.getBoundingClientRect();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(this._initialDomRect, referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._initialDomRect =\n            this._boundaryRect =\n                this._previewRect =\n                    this._initialTransform =\n                        undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition, event });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n                event,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            if (this.constrainPosition) {\n                this._applyPreviewTransform(x, y);\n            }\n            else {\n                this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n            }\n        }\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.addClass('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = this._preview.getTransitionDuration();\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        this._preview?.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(elementRect, referenceElement, event) {\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition\n            ? this.constrainPosition(point, this, this._initialDomRect, this._pickupPositionInElement)\n            : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y =\n                this._pickupPositionOnPage.y -\n                    (this.constrainPosition ? this._pickupPositionInElement.y : 0);\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x =\n                this._pickupPositionOnPage.x -\n                    (this.constrainPosition ? this._pickupPositionInElement.x : 0);\n        }\n        if (this._boundaryRect) {\n            // If not using a custom constrain we need to account for the pickup position in the element\n            // otherwise we do not need to do this, as it has already been accounted for\n            const { x: pickupX, y: pickupY } = !this.constrainPosition\n                ? this._pickupPositionInElement\n                : { x: 0, y: 0 };\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.setTransform(combineTransforms(transform, initialTransform));\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // DOMRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary DOMRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustDomRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        return (this._parentPositions.positions.get(this._document)?.scrollPosition ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = this._preview\n                ? this._preview.getBoundingClientRect()\n                : this._initialDomRect;\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Callback invoked for `selectstart` events inside the shadow DOM. */\nfunction shadowDomSelectStart(event) {\n    event.preventDefault();\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n    constructor(_element, _dragDropRegistry) {\n        this._element = _element;\n        this._dragDropRegistry = _dragDropRegistry;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /** Direction in which the list is oriented. */\n        this.orientation = 'vertical';\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            delta: 0,\n            overlaps: false,\n        };\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return null;\n        }\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustDomRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustDomRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        return { previousIndex: currentIndex, currentIndex: newIndex };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        const newIndex = index == null || index < 0\n            ? // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this._element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that usually `start` is called together with `enter` when an item goes into a new\n        // container. This will cache item positions, but we need to refresh them since the amount\n        // of items has changed.\n        this._cacheItemPositions();\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeDraggables = items.slice();\n        this._cacheItemPositions();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._itemPositions = [];\n        this._activeDraggables = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeDraggables;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this.orientation === 'horizontal' && this.direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll(topDifference, leftDifference) {\n        // Since we know the amount that the user has scrolled we can shift all of the\n        // client rectangles ourselves. This is cheaper than re-measuring everything and\n        // we can avoid inconsistent behavior where we might be measuring the element before\n        // its position has changed.\n        this._itemPositions.forEach(({ clientRect }) => {\n            adjustDomRect(clientRect, topDifference, leftDifference);\n        });\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach(({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        });\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this.orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this.orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/** Vertical direction in which we can auto-scroll. */\nvar AutoScrollVerticalDirection;\n(function (AutoScrollVerticalDirection) {\n    AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"NONE\"] = 0] = \"NONE\";\n    AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"UP\"] = 1] = \"UP\";\n    AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"DOWN\"] = 2] = \"DOWN\";\n})(AutoScrollVerticalDirection || (AutoScrollVerticalDirection = {}));\n/** Horizontal direction in which we can auto-scroll. */\nvar AutoScrollHorizontalDirection;\n(function (AutoScrollHorizontalDirection) {\n    AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"NONE\"] = 0] = \"NONE\";\n    AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"LEFT\"] = 1] = \"LEFT\";\n    AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"RIGHT\"] = 2] = \"RIGHT\";\n})(AutoScrollHorizontalDirection || (AutoScrollHorizontalDirection = {}));\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Function that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Emits when a dragging sequence is started in a list connected to the current one. */\n        this.receivingStarted = new Subject();\n        /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n        this.receivingStopped = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === AutoScrollVerticalDirection.UP) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n        this._sortStrategy = new SingleAxisSortStrategy(this.element, _dragDropRegistry);\n        this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this.receivingStarted.complete();\n        this.receivingStopped.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Attempts to move an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        if (index == null && this.sortingDisabled) {\n            index = this._draggables.indexOf(item);\n        }\n        this._sortStrategy.enter(item, pointerX, pointerY, index);\n        // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n        // can change when the sort strategy moves the item around inside `enter`.\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param event Event that triggered the dropping sequence.\n     *\n     * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n            event,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._sortStrategy.withItems(this._draggables);\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._sortStrategy.direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        // TODO(crisbeto): eventually we should be constructing the new sort strategy here based on\n        // the new orientation. For now we can assume that it'll always be `SingleAxisSortStrategy`.\n        this._sortStrategy.orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        return this._isDragging\n            ? this._sortStrategy.getItemIndex(item)\n            : this._draggables.indexOf(item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._domRect ||\n            !isPointerNearDomRect(this._domRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n        if (result) {\n            this.sorted.next({\n                previousIndex: result.previousIndex,\n                currentIndex: result.currentIndex,\n                container: this,\n                item,\n            });\n        }\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n        let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearDomRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, this._sortStrategy.direction, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const domRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(domRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(domRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._sortStrategy.start(this._draggables);\n        this._cacheParentPositions();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `DOMRect`.\n        this._domRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._sortStrategy.reset();\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._domRect != null && isInsideClientRect(this._domRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._domRect ||\n            !isInsideClientRect(this._domRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `DOMRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n            this.receivingStarted.next({\n                initiator: sibling,\n                receiver: this,\n                items,\n            });\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n        this.receivingStopped.next({ initiator: sibling, receiver: this });\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._sortStrategy\n            .getActiveItemsSnapshot()\n            .filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return AutoScrollVerticalDirection.UP;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return AutoScrollVerticalDirection.DOWN;\n    }\n    return AutoScrollVerticalDirection.NONE;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return AutoScrollHorizontalDirection.LEFT;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return AutoScrollHorizontalDirection.RIGHT;\n    }\n    return AutoScrollHorizontalDirection.NONE;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param direction Layout direction of the drop list.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, direction, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === AutoScrollVerticalDirection.UP) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = AutoScrollVerticalDirection.UP;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = AutoScrollVerticalDirection.DOWN;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (direction === 'rtl') {\n            if (computedHorizontal === AutoScrollHorizontalDirection.RIGHT) {\n                // In RTL `scrollLeft` will be negative when scrolled.\n                if (scrollLeft < 0) {\n                    horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n                }\n            }\n            else if (element.scrollWidth + scrollLeft > element.clientWidth) {\n                horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n            }\n        }\n        else {\n            if (computedHorizontal === AutoScrollHorizontalDirection.LEFT) {\n                if (scrollLeft > 0) {\n                    horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n                }\n            }\n            else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n                horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n            }\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/** Keeps track of the apps currently containing drag items. */\nconst activeApps = new Set();\n/**\n * Component used to load the drag&drop reset styles.\n * @docs-private\n */\nclass _ResetsLoader {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: _ResetsLoader, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: _ResetsLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"cdk-drag-resets-container\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit}}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: _ResetsLoader, decorators: [{\n            type: Component,\n            args: [{ standalone: true, encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, host: { 'cdk-drag-resets-container': '' }, styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit}}\"] }]\n        }] });\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        this._appRef = inject(ApplicationRef);\n        this._environmentInjector = inject(EnvironmentInjector);\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._loadResets();\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n    // TODO(crisbeto): abstract this away into something reusable.\n    /** Loads the CSS resets needed for the module to work correctly. */\n    _loadResets() {\n        if (!activeApps.has(this._appRef)) {\n            activeApps.add(this._appRef);\n            const componentRef = createComponent(_ResetsLoader, {\n                environmentInjector: this._environmentInjector,\n            });\n            this._appRef.onDestroy(() => {\n                activeApps.delete(this._appRef);\n                if (activeApps.size === 0) {\n                    componentRef.destroy();\n                }\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DragDrop, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }] });\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._stateChanges.next(this);\n    }\n    constructor(element, _parentDrag) {\n        this.element = element;\n        this._parentDrag = _parentDrag;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        _parentDrag?._addHandle(this);\n    }\n    ngOnDestroy() {\n        this._parentDrag?._removeHandle(this);\n        this._stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: CdkDragHandle, isStandalone: true, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\", booleanAttribute] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDragHandleDisabled', transform: booleanAttribute }]\n            }] } });\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    static { this._dragInstances = []; }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._dragRef.disabled = this._disabled;\n    }\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        this._handles = new BehaviorSubject([]);\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config?.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._handles.complete();\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    _addHandle(handle) {\n        const handles = this._handles.getValue();\n        handles.push(handle);\n        this._handles.next(handles);\n    }\n    _removeHandle(handle) {\n        const handles = this._handles.getValue();\n        const index = handles.indexOf(handle);\n        if (index > -1) {\n            handles.splice(index, 1);\n            this._handles.next(handles);\n        }\n    }\n    _setPreviewTemplate(preview) {\n        this._previewTemplate = preview;\n    }\n    _resetPreviewTemplate(preview) {\n        if (preview === this._previewTemplate) {\n            this._previewTemplate = null;\n        }\n    }\n    _setPlaceholderTemplate(placeholder) {\n        this._placeholderTemplate = placeholder;\n    }\n    _resetPlaceholderTemplate(placeholder) {\n        if (placeholder === this._placeholderTemplate) {\n            this._placeholderTemplate = null;\n        }\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        element.parentElement?.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })?._dragRef || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(startEvent => {\n            this.started.emit({ source: this, event: startEvent.event });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(releaseEvent => {\n            this.released.emit({ source: this, event: releaseEvent.event });\n        });\n        ref.ended.subscribe(endEvent => {\n            this.ended.emit({\n                source: this,\n                distance: endEvent.distance,\n                dropPoint: endEvent.dropPoint,\n                event: endEvent.event,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(enterEvent => {\n            this.entered.emit({\n                container: enterEvent.container.data,\n                item: this,\n                currentIndex: enterEvent.currentIndex,\n            });\n        });\n        ref.exited.subscribe(exitEvent => {\n            this.exited.emit({\n                container: exitEvent.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                item: this,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles\n            .pipe(\n        // Sync the new handles with the DragRef.\n        tap(handles => {\n            const handleElements = handles.map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                handleElements.push(this.element);\n            }\n            this._dragRef.withHandles(handleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => item._stateChanges.pipe(startWith(item))));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i1$1.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: CdkDrag, isStandalone: true, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\", booleanAttribute], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    standalone: true,\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DROP_LIST]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_HANDLE]\n                }] }, { type: CdkDrag, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }] }], propDecorators: { data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDragDisabled', transform: booleanAttribute }]\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        /** Whether starting a dragging sequence from inside this group is disabled. */\n        this.disabled = false;\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: CdkDropListGroup, isStandalone: true, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\", booleanAttribute] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    standalone: true,\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListGroupDisabled', transform: booleanAttribute }]\n            }] } });\n\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    /** Keeps track of the drop lists that are currently on the page. */\n    static { this._dropLists = []; }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = value;\n    }\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = this.sortingDisabled;\n            ref.autoScrollDisabled = this.autoScrollDisabled;\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                item: dropEvent.item.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n        merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i1$1.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: CdkDropList, isStandalone: true, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\", booleanAttribute], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\", booleanAttribute], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\", booleanAttribute], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ], exportAs: [\"cdkDropList\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    standalone: true,\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: CdkDropListGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DROP_LIST_GROUP]\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }], propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListDisabled', transform: booleanAttribute }]\n            }], sortingDisabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListSortingDisabled', transform: booleanAttribute }]\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListAutoScrollDisabled', transform: booleanAttribute }]\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._drag = inject(CDK_DRAG_PARENT, { optional: true });\n        /** Whether the preview should preserve the same size as the item that is being dragged. */\n        this.matchSize = false;\n        this._drag?._setPreviewTemplate(this);\n    }\n    ngOnDestroy() {\n        this._drag?._resetPreviewTemplate(this);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: CdkDragPreview, isStandalone: true, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: [\"matchSize\", \"matchSize\", booleanAttribute] }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._drag = inject(CDK_DRAG_PARENT, { optional: true });\n        this._drag?._setPlaceholderTemplate(this);\n    }\n    ngOnDestroy() {\n        this._drag?._resetPlaceholderTemplate(this);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: CdkDragPlaceholder, isStandalone: true, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { data: [{\n                type: Input\n            }] } });\n\nconst DRAG_DROP_DIRECTIVES = [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n];\nclass DragDropModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: DragDropModule, imports: [CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder], exports: [CdkScrollableModule, CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: DRAG_DROP_DIRECTIVES,\n                    exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, booleanAttribute, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { ReplaySubject, Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\n\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort {\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    constructor(_defaultOptions) {\n        this._defaultOptions = _defaultOptions;\n        this._initializedStream = new ReplaySubject(1);\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overridden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Whether the sortable is disabled. */\n        this.disabled = false;\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n        /** Emits when the paginator is initialized. */\n        this.initialized = this._initializedStream;\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._initializedStream.next();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._initializedStream.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatSort, isStandalone: true, selector: \"[matSort]\", inputs: { active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\", booleanAttribute], disabled: [\"matSortDisabled\", \"disabled\", booleanAttribute] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: {\n                        'class': 'mat-sort',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }], propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: [{ alias: 'matSortDisableClear', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matSortDisabled', transform: booleanAttribute }]\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader {\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber, defaultOptions) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        /** whether the sort header is disabled. */\n        this.disabled = false;\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        if (defaultOptions?.arrowPosition) {\n            this.arrowPosition = defaultOptions?.arrowPosition;\n        }\n        this._handleStateChanges();\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n        if (this._sortButton) {\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n        }\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n            this._ariaDescriber?.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }, { token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.0\", type: MatSortHeader, isStandalone: true, selector: \"[mat-sort-header]\", inputs: { id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", disabled: [\"disabled\", \"disabled\", booleanAttribute], sortActionDescription: \"sortActionDescription\", disableClear: [\"disableClear\", \"disableClear\", booleanAttribute] }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  @if (_renderArrow()) {\\n    <div class=\\\"mat-sort-header-arrow\\\"\\n        [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n        [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n        [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n        (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n        (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n      <div class=\\\"mat-sort-header-stem\\\"></div>\\n      <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n        <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n      </div>\\n    </div>\\n  }\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color);opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"], animations: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], standalone: true, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  @if (_renderArrow()) {\\n    <div class=\\\"mat-sort-header-arrow\\\"\\n        [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n        [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n        [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n        (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n        (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n      <div class=\\\"mat-sort-header-stem\\\"></div>\\n      <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n        <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n      </div>\\n    </div>\\n  }\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color);opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"] }]\n        }], ctorParameters: () => [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                }, {\n                    type: Optional\n                }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }], propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nclass MatSortModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, imports: [MatCommonModule, MatSort, MatSortHeader], exports: [MatSort, MatSortHeader] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatSort, MatSortHeader],\n                    exports: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n"],"names":["mergeMap","_observableMergeMap","catchError","_observableCatch","Observable","throwError","_observableThrow","of","_observableOf","Inject","Injectable","HttpClient","HttpHeaders","HttpResponse","HttpResponseBase","ErrorDto","RegistryDtoOfUserRegistryItem","SERVER_BASE_URL","UsersClient","http","baseUrl","jsonParseReviver","undefined","constructor","search","searchModel","url_","replace","content_","JSON","stringify","options_","body","observe","responseType","headers","Accept","request","pipe","response_","processSearch","e","response","status","responseBlob","error","Blob","_headers","key","keys","get","blobToText","_responseText","result200","resultData200","parse","fromJS","result401","resultData401","throwException","select","selected","id","processSelect","allSelect","args","__decorate","providedIn","ApiException","Error","message","result","isApiException","obj","blob","observer","next","complete","reader","FileReader","onload","event","target","readAsText","code","title","init","_data","data","toJSON","SearchParametersDto","page","itemsPerPage","orderBy","orderAsc","UserRegistrySearchModel","name","searchParameters","items","itemsCount","Array","isArray","item","push","UserRegistryItem","ChangeDetectorRef","Component","EventEmitter","Input","Output","ViewChild","MatSort","Subject","takeUntil","moveItemInArray","Columns","RegistryUsersTableComponent","usersClient","cdr","sort","table","usersDataSource","isLoading","onSortChange","onPageSizeIncrease","onSelectChange","onAllSelectChange","destroy$","columns","displayedColumns","Object","values","allSelected","ngOnDestroy","ngAfterViewInit","sortChange","subscribe","emit","toggleSelectAllUsers","checked","isAllSelected","some","user","selectUser","onScroll","offsetHeight","scrollTop","scrollHeight","drop","previousIndex","currentIndex","renderRows","selector","template","__NG_CLI_RESOURCE__0","FormControl","FormGroup","FILTERS_MODEL","FilterStateService","UsersComponent","filterStateService","filterForm","initItemsPerPage","isTableLoading","maxChunks","createFilterForm","setSearchModelDefault","ngOnInit","filter","loadFilter","users","patchValue","searchItems","formValue","getRawValue","valid","reset","value","onClearName","isAscSort","direction","active","saveFilter","Math","ceil","Number","forEach","providers","NgModule","RouterModule","routes","path","pathMatch","component","UsersRoutingModule","imports","forChild","exports","SharedModule","ObserversModule","MatSortHeader","DragDropModule","UsersModule","declarations","saveFilters","filters","localStorage","setItem","type","loadFilters","getItem","asyncScheduler","timer","interval","period","scheduler","i0","ViewEncapsulation","ChangeDetectionStrategy","inject","ApplicationRef","EnvironmentInjector","createComponent","InjectionToken","booleanAttribute","Directive","Optional","SkipSelf","Self","DOCUMENT","i1","CdkScrollableModule","_getEventTarget","normalizePassiveListenerOptions","_getShadowRoot","coerceElement","coerceNumberProperty","coerceArray","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","Subscription","animationFrameScheduler","merge","BehaviorSubject","map","take","tap","switchMap","startWith","i1$1","extendStyles","dest","source","importantProperties","hasOwnProperty","setProperty","has","removeProperty","toggleNativeDragInteractions","element","enable","userSelect","style","toggleVisibility","position","top","opacity","left","combineTransforms","transform","initialTransform","matchElementSize","sourceRect","width","height","getTransform","x","y","round","getMutableClientRect","rect","getBoundingClientRect","right","bottom","isInsideClientRect","clientRect","adjustDomRect","domRect","isPointerNearDomRect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","_document","positions","Map","clear","cache","elements","set","scrollPosition","getViewportScrollPosition","scrollLeft","handleScroll","cachedPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","node","contains","window","scrollY","scrollX","deepCloneNode","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","toLowerCase","removeAttribute","i","length","transferCanvasData","transferInputData","transferData","callback","descendantElements","cloneElements","cloneUniqueId","context","getContext","drawImage","getRootNode","viewRef","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","appendChild","parseCssTimeUnitsToMs","multiplier","indexOf","parseFloat","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","getPropertyValue","split","part","trim","Set","PreviewRef","_rootElement","_direction","_initialDomRect","_previewTemplate","_previewClass","_pickupPositionOnPage","_initialTransform","_zIndex","attach","parent","_preview","_createPreview","destroy","remove","_previewEmbeddedView","setTransform","addClass","className","classList","add","getTransitionDuration","addEventListener","handler","removeEventListener","previewConfig","previewClass","previewTemplate","preview","rootRect","matchSize","viewContainer","createEmbeddedView","detectChanges","setAttribute","passiveEventListenerOptions","passive","activeEventListenerOptions","activeCapturingEventOptions$1","capture","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","DragRef","disabled","_disabled","_dropContainer","_toggleNativeDragInteractions","_handles","handle","_config","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","_pointerMoveSubscription","EMPTY","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_disabledHandles","dragStartDelay","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","_getTargetHandle","_initializeDragSequence","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","abs","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","container","_endDragSequence","isDragging","isReceiving","cancelable","preventDefault","run","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","offset","constrainPosition","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","disabledHandles","withPreviewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","unsubscribe","change","_containInsideBoundaryOnResize","_parentDragRef","dispose","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeListeners","disableHandle","enableHandle","delete","withDirection","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","shadowDomSelectStart","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","shadowRoot","dropContainer","parentNode","placeholder","_createPlaceholderElement","anchor","createComment","insertBefore","zIndex","_getPreviewInsertionPoint","replaceChild","start","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","_pickupPositionInElement","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","isPointerOverContainer","_isOverContainer","previousContainer","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","Promise","resolve","placeholderRect","duration","propertyName","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","min","max","array","fromIndex","toIndex","from","clamp","to","transferArrayItem","currentArray","targetArray","targetIndex","splice","copyArrayItem","SingleAxisSortStrategy","_element","_itemPositions","orientation","_previousSwap","drag","overlaps","withItems","pointerDelta","siblings","newIndex","_getItemIndexFromPointerPosition","isHorizontal","findIndex","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","slice","sibling","index","isDraggedItem","elementToOffset","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","parentElement","_cacheItemPositions","withSortPredicate","predicate","_sortPredicate","p","getActiveItemsSnapshot","reverse","updateOnScroll","elementToMeasure","a","b","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","floor","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","AutoScrollVerticalDirection","AutoScrollHorizontalDirection","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","receivingStarted","receivingStopped","_isDragging","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","NONE","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","_scrollNode","scrollStep","UP","scrollBy","DOWN","LEFT","RIGHT","withScrollableParents","registerDropContainer","_sortStrategy","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_cacheParentPositions","_reset","previousItems","draggedItems","every","connectedTo","withOrientation","_scrollableElements","size","_domRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","_canReceive","elementFromPoint","nativeElement","_startReceiving","activeSiblings","initiator","receiver","computedVertical","computedHorizontal","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","activeApps","_ResetsLoader","ɵfac","_ResetsLoader_Factory","t","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","standalone","features","ɵɵStandaloneFeature","decls","vars","_ResetsLoader_Template","rf","ctx","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","None","OnPush","host","DragDropRegistry","_appRef","_environmentInjector","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","_loadResets","startsWith","options","config","_clearGlobalListeners","streams","eventOptions","instance","componentRef","environmentInjector","onDestroy","DragDropRegistry_Factory","ɵɵinject","NgZone","ɵprov","ɵɵdefineInjectable","token","factory","decorators","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","DragDrop_Factory","ViewportRuler","CDK_DRAG_PARENT","assertElementNode","CDK_DRAG_HANDLE","CdkDragHandle","_stateChanges","_parentDrag","_addHandle","_removeHandle","CdkDragHandle_Factory","ɵɵdirectiveInject","ElementRef","ɵdir","ɵɵdefineDirective","inputs","ɵɵInputFlags","HasDecoratorInputTransform","ɵɵProvidersFeature","provide","useExisting","ɵɵInputTransformsFeature","alias","CDK_DRAG_CONFIG","DRAG_HOST_CLASS","CDK_DROP_LIST","CdkDrag","_dragRef","_viewContainerRef","_dir","dragDrop","_changeDetectorRef","_selfHandle","_destroyed","subscription","movedEvent","_assignDefaults","_dropListRef","addItem","_syncInputs","_handleEvents","onStable","_updateRootElement","_setupHandlesListener","freeDragPosition","ngOnChanges","changes","rootSelectorChange","positionChange","firstChange","removeItem","getValue","_setPreviewTemplate","_resetPreviewTemplate","_setPlaceholderTemplate","_resetPlaceholderTemplate","rootElementSelector","closest","_getBoundaryElement","boundary","ref","dir","templateRef","startEvent","markForCheck","releaseEvent","endEvent","enterEvent","exitEvent","dropEvent","draggingDisabled","handleElements","handleInstance","dragRef","CdkDrag_Factory","ViewContainerRef","Directionality","hostVars","hostBindings","CdkDrag_HostBindings","ɵɵclassProp","outputs","exportAs","ɵɵNgOnChangesFeature","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","CdkDropListGroup_Factory","_uniqueIdCounter","CdkDropList","_dropLists","_group","_scrollDispatcher","_unsortedItems","_setupInputSyncSubscription","_syncItemsWithRef","getSortedItems","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","correspondingDropList","list","console","warn","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","listAutoScrollDisabled","listOrientation","CdkDropList_Factory","ScrollDispatcher","CdkDropList_HostBindings","ɵɵattribute","useValue","CDK_DRAG_PREVIEW","CdkDragPreview","_drag","optional","CdkDragPreview_Factory","TemplateRef","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","CdkDragPlaceholder_Factory","DRAG_DROP_DIRECTIVES","DragDropModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","i3","SPACE","ENTER","ReplaySubject","trigger","state","transition","animate","keyframes","query","animateChild","AnimationDurations","AnimationCurves","MatCommonModule","_c0","_c1","MatSortHeader_Conditional_3_Template","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_start_0_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","_disableViewStateAnimation","MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_done_0_listener","ɵɵelement","ɵɵelementEnd","ɵɵproperty","_getArrowViewState","_getArrowDirectionState","ɵɵadvance","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MAT_SORT_DEFAULT_OPTIONS","_defaultOptions","_initializedStream","sortables","initialized","register","sortable","deregister","getNextSortDirection","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","MatSort_Factory","sortOrder","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","MatSortHeaderIntl","MatSortHeaderIntl_Factory","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MAT_SORT_HEADER_INTL_PROVIDER","deps","useFactory","sortActionDescription","_sortActionDescription","_updateSortActionDescription","_intl","_sort","_columnDef","_focusMonitor","_elementRef","_ariaDescriber","defaultOptions","_showIndicatorHint","_viewState","_arrowDirection","_handleStateChanges","_updateArrowDirection","_setAnimationTransitionState","toState","_isSorted","_sortButton","querySelector","monitor","origin","newState","_setIndicatorHintVisible","stopMonitoring","_rerenderSubscription","removeDescription","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_handleKeydown","keyCode","_getAriaSortAttribute","_renderArrow","newDescription","describe","MatSortHeader_Factory","FocusMonitor","AriaDescriber","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_keydown_HostBindingHandler","$event","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","attrs","ngContentSelectors","consts","MatSortHeader_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵtemplate","ɵɵconditional","animation","animations","MatSortModule","MatSortModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[7,10,11]}